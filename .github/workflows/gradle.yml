# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle
name: Continous Integration Continous Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        
    - name: Grant Execute Permission For Gradlew
      run: chmod +x gradlew

      #para hacer deployment de docker debo desactivar los test con: -x test
    - name: Build And Test With Gradle
      run: ./gradlew build -x test

#Si no deseo subir imagen de docker comentare los sigtes jobs
    - name: Build Jar With Gradle
      run: ./gradlew bootJar

      # Setting secrets to environment variables To login in docker
    - name: Login To Docker
      env:
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

#       Login in docker hub with my environment variable
      run: docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

#       Build docker image and then push the image to dockerhub
    - name: Build Docker Image
      run: docker build -t kerxd/ontology-app .

    - name: Push Docker Image
      run: docker push kerxd/ontology-app

#    - name: Deploy to Heroku
#      uses: AkhileshNS/heroku-deploy@v3.12.12
#      with:
#   # This will be used for authentication. You can find it in your heroku homepage account settings
#        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
#   # Email that you use with heroku
#        heroku_email: ${{secrets.HEROKU_EMAIL}}
#   # The appname to use for deploying/updating
#        heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
      
      
